Perfeito, Miguel. Com a defini√ß√£o de que o sistema ser√° hospedado na **Railway**, vou montar agora o **documento definitivo e estruturado** para voc√™ enviar √† IA do Replit.

Esse documento orienta **passo a passo tudo o que ela deve fazer**, desde a cria√ß√£o do usu√°rio da IA at√© o painel administrativo de controle e integra√ß√£o com a OpenAI.

---

## üì¶ Instru√ß√µes para IA do Replit ‚Äì Integra√ß√£o Autom√°tica da IA no Portal do Piloto (Railway Ready)

---

### ‚úÖ 1. Criar usu√°rio colaborador para a IA

Crie um registro fixo no banco de dados com os seguintes dados:

```json
{
  "nome": "ChatGPT IA",
  "email": "ia@aereovisao.com.br",
  "role": "colaborador",
  "ativo": true
}
```

Esse ser√° o autor oficial das postagens autom√°ticas da IA.

---

### ‚úÖ 2. Criar rota segura `POST /api/posts/ia`

Essa rota recebe requisi√ß√µes autom√°ticas da IA e **cria postagens no sistema**.

#### Requisitos:
- Verificar header `x-api-key` com valor igual a `process.env.IA_SECRET_KEY`
- Buscar o usu√°rio da IA pelo email `"ia@aereovisao.com.br"`
- Criar nova postagem com os seguintes dados:

```ts
{
  titulo: string,
  resumo?: string,
  conteudo: string (HTML),
  categoria: "dicas" | "firmware" | "legislacao" | "noticia",
  imagem?: string (URL da imagem de capa),
  anexo?: string (URL de PDF ou zip)
}
```

- Associar `authorId` com o ID do usu√°rio da IA

---

### ‚úÖ 3. Criar painel administrativo `/admin/config-ia`

Criar p√°gina vis√≠vel apenas para administradores com os seguintes campos configur√°veis:

| Campo                         | Tipo             |
|------------------------------|------------------|
| Ativar IA                    | Toggle (on/off)  |
| Quantidade de posts por dia  | N√∫mero inteiro   |
| Categorias ativas            | Multiselect      |
| Hor√°rio de execu√ß√£o (local)  | HH:MM (ex: 10:00) |
| Prompt base para a IA        | Textarea         |
| Idioma                       | Select (pt-BR, en-US) |
| Usu√°rio autor (exibido)      | Fixar como `ia@aereovisao.com.br` |

#### Backend:
- Criar tabela `config_ia` (se PostgreSQL)
- Criar endpoints:
  - `GET /api/config/ia`
  - `PUT /api/config/ia`

Essas configura√ß√µes ser√£o utilizadas pelo rob√¥ da IA diariamente.

---

### ‚úÖ 4. Criar rob√¥ autom√°tico da IA (cron ou script)

Crie um script Node.js (`/scripts/iaBot.ts`) que:

1. Faz `GET` em `/api/config/ia`
2. Se a IA estiver **ativada**, gera conte√∫do para cada categoria configurada
3. Usa a API da OpenAI (ChatGPT) com o `prompt base` para gerar:
   - T√≠tulo
   - Conte√∫do HTML
   - Resumo
   - Imagem de capa (pode ser sugest√£o de link)
   - PDF (opcional, apenas se citado)

4. Envia `POST` para `/api/posts/ia` com cabe√ßalho `x-api-key`

---

### ‚úÖ 5. Agendamento

- No Replit: usar `setInterval()` ou `@replit/extensions/cron`
- No Railway: usar `node-cron` (ex: 1x por dia √†s 10h)
- Adicionar fallback manual com bot√£o "Executar IA agora" no painel `/admin/config-ia` (opcional)

---

### ‚úÖ 6. Vari√°veis de ambiente obrigat√≥rias

No `.env`:

```
OPENAI_API_KEY=sua-chave-gpt
IA_SECRET_KEY=uma-chave-segura-aereovisao
```

---

### ‚úÖ 7. Resultado final esperado

- IA publica conte√∫do diariamente com base nas categorias configuradas
- Admin controla regras sem editar c√≥digo
- Sistema funciona no Replit e j√° est√° preparado para Railway com dom√≠nio `aereovisao.com.br`

---

Se desejar, posso agora gerar os **arquivos completos em `.ts/.tsx` para subir no projeto**. Deseja que eu inicie por algum?